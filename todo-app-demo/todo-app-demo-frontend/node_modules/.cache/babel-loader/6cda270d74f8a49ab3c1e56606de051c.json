{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Komputer\\\\Desktop\\\\Komputer\\\\Projects\\\\Full_Stack-Study\\\\todo-app-demo\\\\todo-app-demo-frontend\\\\src\\\\components\\\\TodoItem.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst TodoItem = props => {\n  _s();\n\n  const {\n    emitDeleteTodoItem\n  } = props;\n  const [todoItem, setTodoItem] = useState(props.data);\n  const [isDirty, setDirty] = useState(false);\n  useEffect(() => {\n    if (isDirty) {\n      fetch(`http://localhost:8080/api/todoItems/${todoItem.id}`, {\n        method: 'PUT',\n        headers: {\n          'content-type': 'application/json'\n        },\n        body: JSON.stringify(todoItem)\n      }).then(response => response.json()).then(data => {\n        setDirty(false);\n        setTodoItem(data);\n      });\n      console.log(\"todo item changed\", todoItem);\n    }\n  }, [todoItem, isDirty]);\n\n  function updateIsDone() {\n    setDirty(true);\n    setTodoItem({ ...todoItem,\n      isDone: !todoItem.isDone\n    });\n  }\n\n  function updateTask(e) {\n    setDirty(true);\n    setTodoItem({ ...todoItem,\n      task: e.target.value\n    });\n  }\n\n  function deleteTodoItem() {\n    fetch(`http://localhost:8080/api/todoItems/${todoItem.id}`, {\n      method: 'DELETE',\n      headers: {\n        'content-type': 'application/json'\n      }\n    }).then(() => {\n      emitDeleteTodoItem(todoItem);\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"checkbox\",\n      checked: todoItem.isDone,\n      onChange: updateIsDone\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 11\n    }, this), todoItem.isDone ? /*#__PURE__*/_jsxDEV(\"span\", {\n      style: {\n        textDecoration: 'line-through'\n      },\n      children: todoItem.task\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 34\n    }, this) : /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: todoItem.task,\n      onChange: updateTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 110\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      style: {\n        marginLeft: '2rem',\n        cursor: 'pointer'\n      },\n      onClick: deleteTodoItem,\n      children: \"\\uD83D\\uDDD1\\uFE0F\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 9\n  }, this);\n};\n\n_s(TodoItem, \"Lsg9B8STateHsHm9WiJAcTpeEtw=\");\n\n_c = TodoItem;\nexport default TodoItem;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoItem\");","map":{"version":3,"sources":["C:/Users/Komputer/Desktop/Komputer/Projects/Full_Stack-Study/todo-app-demo/todo-app-demo-frontend/src/components/TodoItem.jsx"],"names":["React","useState","useEffect","TodoItem","props","emitDeleteTodoItem","todoItem","setTodoItem","data","isDirty","setDirty","fetch","id","method","headers","body","JSON","stringify","then","response","json","console","log","updateIsDone","isDone","updateTask","e","task","target","value","deleteTodoItem","textDecoration","marginLeft","cursor"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;;AAEA,MAAMC,QAAQ,GAAIC,KAAD,IAAW;AAAA;;AACxB,QAAM;AAAEC,IAAAA;AAAF,MAAyBD,KAA/B;AACA,QAAM,CAACE,QAAD,EAAWC,WAAX,IAA0BN,QAAQ,CAACG,KAAK,CAACI,IAAP,CAAxC;AACA,QAAM,CAACC,OAAD,EAAUC,QAAV,IAAsBT,QAAQ,CAAC,KAAD,CAApC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAGO,OAAH,EAAY;AACRE,MAAAA,KAAK,CAAE,uCAAsCL,QAAQ,CAACM,EAAG,EAApD,EAAuD;AACxDC,QAAAA,MAAM,EAAG,KAD+C;AAExDC,QAAAA,OAAO,EAAG;AACN,0BAAiB;AADX,SAF8C;AAKxDC,QAAAA,IAAI,EAAGC,IAAI,CAACC,SAAL,CAAeX,QAAf;AALiD,OAAvD,CAAL,CAOCY,IAPD,CAOMC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EAPlB,EAQCF,IARD,CAQMV,IAAI,IAAI;AACVE,QAAAA,QAAQ,CAAC,KAAD,CAAR;AACAH,QAAAA,WAAW,CAACC,IAAD,CAAX;AACH,OAXD;AAaAa,MAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ,EAAiChB,QAAjC;AACH;AACJ,GAjBQ,EAiBN,CAACA,QAAD,EAAWG,OAAX,CAjBM,CAAT;;AAmBA,WAASc,YAAT,GAAwB;AACpBb,IAAAA,QAAQ,CAAC,IAAD,CAAR;AACAH,IAAAA,WAAW,CAAC,EAAC,GAAGD,QAAJ;AAAckB,MAAAA,MAAM,EAAE,CAAClB,QAAQ,CAACkB;AAAhC,KAAD,CAAX;AACH;;AAED,WAASC,UAAT,CAAoBC,CAApB,EAAuB;AACnBhB,IAAAA,QAAQ,CAAC,IAAD,CAAR;AACAH,IAAAA,WAAW,CAAC,EAAC,GAAGD,QAAJ;AAAcqB,MAAAA,IAAI,EAAED,CAAC,CAACE,MAAF,CAASC;AAA7B,KAAD,CAAX;AACH;;AAED,WAASC,cAAT,GAA0B;AACtBnB,IAAAA,KAAK,CAAE,uCAAsCL,QAAQ,CAACM,EAAG,EAApD,EAAuD;AACxDC,MAAAA,MAAM,EAAG,QAD+C;AAExDC,MAAAA,OAAO,EAAG;AACN,wBAAiB;AADX;AAF8C,KAAvD,CAAL,CAMCI,IAND,CAMM,MAAM;AACRb,MAAAA,kBAAkB,CAACC,QAAD,CAAlB;AACH,KARD;AASH;;AAED,sBACI;AAAA,4BACE;AAAO,MAAA,IAAI,EAAC,UAAZ;AAAuB,MAAA,OAAO,EAAEA,QAAQ,CAACkB,MAAzC;AAAiD,MAAA,QAAQ,EAAED;AAA3D;AAAA;AAAA;AAAA;AAAA,YADF,EAGMjB,QAAQ,CAACkB,MAAT,gBAAmB;AAAM,MAAA,KAAK,EAAE;AAAEO,QAAAA,cAAc,EAAG;AAAnB,OAAb;AAAA,gBAAkDzB,QAAQ,CAACqB;AAA3D;AAAA;AAAA;AAAA;AAAA,YAAnB,gBAA+F;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,KAAK,EAAErB,QAAQ,CAACqB,IAAnC;AAAyC,MAAA,QAAQ,EAAEF;AAAnD;AAAA;AAAA;AAAA;AAAA,YAHrG,eAKE;AAAM,MAAA,KAAK,EAAE;AAAEO,QAAAA,UAAU,EAAG,MAAf;AAAuBC,QAAAA,MAAM,EAAG;AAAhC,OAAb;AAAyD,MAAA,OAAO,EAAEH,cAAlE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YALF;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AASH,CAvDD;;GAAM3B,Q;;KAAAA,Q;AAyDN,eAAeA,QAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nconst TodoItem = (props) => {\r\n    const { emitDeleteTodoItem } = props;\r\n    const [todoItem, setTodoItem] = useState(props.data);\r\n    const [isDirty, setDirty] = useState(false);\r\n\r\n    useEffect(() => {\r\n        if(isDirty) {\r\n            fetch(`http://localhost:8080/api/todoItems/${todoItem.id}`, {\r\n                method : 'PUT',\r\n                headers : {\r\n                    'content-type' : 'application/json'\r\n                },\r\n                body : JSON.stringify(todoItem)\r\n            })\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                setDirty(false);\r\n                setTodoItem(data);\r\n            });\r\n\r\n            console.log(\"todo item changed\", todoItem);\r\n        }\r\n    }, [todoItem, isDirty]);\r\n\r\n    function updateIsDone() {\r\n        setDirty(true);\r\n        setTodoItem({...todoItem, isDone: !todoItem.isDone});\r\n    }\r\n\r\n    function updateTask(e) {\r\n        setDirty(true);\r\n        setTodoItem({...todoItem, task: e.target.value});\r\n    }\r\n\r\n    function deleteTodoItem() {\r\n        fetch(`http://localhost:8080/api/todoItems/${todoItem.id}`, {\r\n            method : 'DELETE',\r\n            headers : {\r\n                'content-type' : 'application/json'\r\n            }\r\n        })\r\n        .then(() => {\r\n            emitDeleteTodoItem(todoItem);\r\n        });\r\n    }\r\n\r\n    return (\r\n        <div>\r\n          <input type=\"checkbox\" checked={todoItem.isDone} onChange={updateIsDone}/>\r\n          {\r\n              todoItem.isDone ? (<span style={{ textDecoration : 'line-through'}}>{todoItem.task}</span>) : (<input type=\"text\" value={todoItem.task} onChange={updateTask}/>)\r\n          }\r\n          <span style={{ marginLeft : '2rem', cursor : 'pointer'}} onClick={deleteTodoItem}>üóëÔ∏è</span>\r\n        </div>\r\n      );\r\n};\r\n\r\nexport default TodoItem;"]},"metadata":{},"sourceType":"module"}